#!/bin/sh

export TERM=linux
run_shell() {
cd /
umount /1 
umount /2
exec 1>/dev/console
exec 2>/dev/console
/bin/sh
exit
}

delay_disp() {
sleep 2
echo 5 >/dev/console
sleep 2
echo 4 >/dev/console
sleep 2
echo 3 >/dev/console
sleep 2
echo 2 >/dev/console
sleep 2
echo 1 >/dev/console
sleep 2
echo 0 >/dev/console
sleep 3
return
}

if ! [ -s /scripts/reinstall ] ; then
udevd -d >/dev/null 2>/dev/null
sleep 3
fi

clear
exec 1>/dev/null
exec 2>/dev/null
echo >/dev/console
echo >/dev/console
echo >/dev/console
modprobe vfat
modprobe nls_cp437
modprobe nls_utf8

for dev in /sys/block/sd*
do
 echo "add" > ${dev}/uevent
done

echo Scaning.... >/dev/console
sleep 4

echo ========================================================= >/dev/console
num=0
for dev in  /dev/sd* 
do

cd /
umount /1
mount ${dev} /1 >/dev/null 2>/dev/null

if ! [ -s /scripts/reinstall ] ; then
if [ -s  /1/install ] ; then
cd /
cp /1/install /sbin
umount /1
chmod 755 /sbin/install
date >/scripts/reinstall
/sbin/install
exit
fi #-s /1/install
fi

if [ "`uname -a |grep x86_64`" ] ; then 
 prefix="x86"
 dst_disk="sda"
 mkfs="mkfs.ext4 -F"
 ext4="ext4"
else
 prefix="loongson"
 dst_disk="sda"
 mkfs="mkfs.ext4 -F"
 ext4="ext4"
fi
export dst_disk="$dst_disk"

cd /1
for fname in ${prefix}*_20*.tar.*
do
if  [ "$fname" = "${prefix}*_20*.tar.*" ] ; then
 break;
fi
if [ "`echo $fname |grep patch`" ] ; then
 continue;
fi

num=$(( $num + 1 ))
dd if=/1/$fname count=2 bs=1 of=/scripts/${num}.magic
if [ "${fname##*.}" != "lzma" ] ; then
 if [ "${fname##*.}" != "xz" ] ; then
  if [ "`md5sum /scripts/${num}.magic |grep -v 5b25786f919872ca265a821a845567c0 |grep -v e45fbcf6ca3b21f17c5f355728a2fbec`" ] ;then
   num=$(( $num - 1 ))
   continue
  fi
 fi
fi
size=`ls -kl /1/$fname  |awk '{ printf int($5/1000000+0.5)"M"}'`
echo $size >/scripts/${num}.size
echo -e "$num\t${dev}\t$fname\t$size" >/dev/console
echo $dev >/scripts/${num}.dev
echo $fname >/scripts/${num}.file
done #for fname in loongson*_20*.tar.*
done #for dev in  /dev/sd* /dev/ub* /dev/cdrom*
echo ========================================================= >/dev/console
cd /
umount /1
if [ "${num}" = "0" ]
then
echo tar package file not find ... >/dev/console
echo rescan or shell? [Enter] >/dev/console
read rescan
case "$rescan" in 
	shell)
	run_shell
	;;
	no)
	poweroff
	;;
	*)
	echo insert new u-disk, please. >/dev/console
	echo rescan >/scripts/reinstall
	delay_disp
	cd /
	umount /1
	exit
	;;
esac	
fi # $num=0 

if [ "$num" = "1" ]
then 
select=1
else
echo Please Select [1,2,3...,rescan,shell]: >/dev/console
read select 
if [ "a$select" = "a" ] || [ "$select" = "rescan" ]]
then
echo Rescan... >/dev/console
echo Please insert new  u-disk >/dev/console
echo rescan >/scripts/reinstall
delay_disp
cd /
umount /1
exit
fi
if [ "$select" = "shell" ]
then
run_shell
fi
fi
if [ -e /scripts/${select}.dev ]
then
dev=`cat /scripts/${select}.dev`
file=`cat /scripts/${select}.file`
size=`cat /scripts/${select}.size`
else
echo rescan >/scripts/reinstall
echo Rescan... >/dev/console
echo Please insert new  u-disk >/dev/console
delay_disp
cd /
umount /1
exit
fi

exec 1>/dev/console
exec 2>/dev/console
clear
exec 1>/dev/null
exec 2>/dev/null

cat /scripts/version >/dev/console
cat /scripts/build_time >/dev/console
echo ========================================================= >/dev/console
echo $dev $file $size >/dev/console
echo ========================================================= >/dev/console
echo disk /dev/${dst_disk} All data will delete!   continue? [yes/No/rescan/shell] >/dev/console
read seta
if [ "$seta" = "shell" ]
then
run_shell
fi
if [ "$seta" = "rescan" ] 
then
echo rescan >/scripts/reinstall
echo Rescan... >/dev/console
echo Please insert new  u-disk >/dev/console
delay_disp
cd /
umount /1
exit
fi

if [ "a$seta" = "a" ]
then
echo rescan >/scripts/reinstall
echo Rescan... >/dev/console
echo Please insert new  u-disk >/dev/console
delay_disp
cd /
umount /1
exit
fi

if [ "${seta}" != "yes" ]
then
echo No! Poweroff... >/dev/console
sleep 5
poweroff
fi

echo >/dev/console
echo ========================================================= >/dev/console
hdparm -i /dev/sda |grep Model >/dev/console 2>/dev/null
echo ========================================================= >/dev/console
fdisk -l /dev/sda |grep sda >/dev/console 2>/dev/null
echo ========================================================= >/dev/console

echo  DISK /dev/${dst_disk}* ALL DATA WILL DELETE!!!   continue? [yes/No] >/dev/console
read seta
if [ "$seta" != "yes" ]
then
echo No! Poweroff... >/dev/console
sleep 5
poweroff
fi

cat << EOF >/fdisk.txt
O
/1/${dst_disk}.tab_bak`date +%Y%m%d%H%M%S`
q
EOF
fdisk </fdisk.txt >/dev/null 2>/dev/null

dd if=/dev/zero of=/dev/${dst_disk} count=1 bs=512
sda_size=`hdparm -i /dev/sda|tr ',' "\n"|grep LBAsects|tr '=' "\n"|grep -v LBAsects|tr -d "\r\n"`
if [ "$sda_size" -lt "40000000" ] ; then
	fdisk_script=16G.txt
	echo size=$sda_size select 16G.txt
else
	fdisk_script=40G.txt
	echo size=$sda_size select 40G.txt
fi
cat << EOF >/fdisk.txt
I
/scripts/$fdisk_script
w
q
EOF
fdisk /dev/${dst_disk}	</fdisk.txt >/dev/null 2>/dev/null
sleep 3
echo "1. format /dev/${dst_disk}1" >/dev/console
mkfs.ext3 -L boot -F /dev/${dst_disk}1  
echo "2. format /dev/${dst_disk}2" >/dev/console
$mkfs -L root /dev/${dst_disk}2
mkswap /dev/${dst_disk}3
echo "3. format /dev/${dst_disk}5" >/dev/console
$mkfs -L var /dev/${dst_disk}5 
echo "4. format /dev/${dst_disk}6" >/dev/console
$mkfs -L home /dev/${dst_disk}6
mount -o barrier=0 -t ${ext4} /dev/${dst_disk}2 /2 >/dev/null 2>/dev/null
cd /2
umount /1
mount  ${dev} /1 >/dev/null 2>/dev/null
if [ $? != 0 ] ; then
 umount /1 >/dev/null 2>/dev/null
 fsck -y ${dev} >/dev/null 2>/dev/null
 mount  ${dev} /1 >/dev/null 2>/dev/null
fi	
sleep 3

exec 1>/dev/console 
exec 2>/dev/console 
echo 5. export $file to /dev/${dst_disk}2
if [ "a${file##*.}" = "alzma" ] ;then 
 ##is .lzma
 pv /1/$file |lzmadec|tar x -C /2
else 
 if [ "a${file##*.}" = "axz" ]; then
  pv /1/$file |tar Jx -C /2
 else
  if [ "`md5sum /scripts/${select}.magic |grep  5b25786f919872ca265a821a845567c0`" ]
  then ##is .gz
   pv /1/$file |tar zx -C /2
  else ##is .bz2
   pv /1/$file |tar jx -C /2
  fi ##[ "`md5sum /scripts/${select}.magic |grep  5b25786f919872ca265a821a845567c0`" ]
 fi ##[ "a${file##*.}" = "axz" ]
fi ##[ "a${file##*.}" = "alzma" ]

exec 1>/dev/null 
exec 2>/dev/null 

cp /boot.cfg /2/boot/boot.cfg
cp /scripts/fstab /2/etc

rm /2/tmp/* /2/etc/udev/rules.d/70-persistent-net.rules
mount -t proc none /2/proc >/dev/null 2>/dev/null
mount -t sysfs none /2/sys >/dev/null 2>/dev/null
mount -t devtmpfs none /2/dev >/dev/null 2>/dev/null
if [ -e /2/tmp/fix.sh ] ;then
chroot /2 /tmp/fix.sh
fi
cp /scripts/update-pmon /2/tmp
chroot /2 /2/tmp/update-pmon
umount /2/proc /2/dev /2/sys
cp /2/boot/boot.cfg /1
umount /1

mount -t ext3 /dev/${dst_disk}1 /3 >/dev/null 2>/dev/null
echo  >/dev/console
echo  >/dev/console
echo "6. copy /boot/* to /dev/${dst_disk}1"  >/dev/console
cp -a /2/boot/* /3
umount /3

mount -o barrier=0 -t ${ext4} /dev/${dst_disk}5 /3 >/dev/null 2>/dev/null
echo "7. copy /var/* to /dev/${dst_disk}5"  >/dev/console
echo       Please wait ...... >/dev/console
cp -a /2/var/* /3
umount /3

mount -o barrier=0 -t ${ext4} /dev/${dst_disk}6 /3 >/dev/null 2>/dev/null
echo "8. copy /home/* to /dev/${dst_disk}6"  >/dev/console
cp -a /2/home/* /3
umount /3  /2/tmp

if [ "`uname -a |grep x86`" ] ;then
mount  -t ext3 /dev/${dst_disk}1 /2/boot
mount -t devtmpfs none /2/dev
mount -t proc none /2/proc
mount -t sysfs none /2/sys
chroot /2 grub-install /dev/sda
chroot /2 update-grub2
umount /2/dev /2/proc /2/sys
fi

umount /1 /2
echo 9. ok! >/dev/console
echo please reboot. >/dev/console
while read select
do
 sleep 3
done
poweroff
